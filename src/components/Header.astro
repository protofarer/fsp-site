---
import NavLink from './NavLink.astro';
import SITE_MAP from '../constants/site-map'

const linkClassFull = 'font-bold tracking-wide';
const linkClassCompact =
  'font-bold tracking-wide block w-full text-center';
const linkItems = [
  { label: 'Services', href: SITE_MAP.services },
  { label: 'Coaches', href: SITE_MAP.coaches },
  { label: 'About', href: SITE_MAP.about },
  { label: 'Contact', href: SITE_MAP.contact },
];
---

<header class="sticky top-0 z-50 shadow-md flex justify-center bg-white">
  <nav class="w-full py-1 px-4 max-w-3xl">
    <div class="flex justify-between items-center">
      <div class="font-bold tracking-wider text-emerald-500 text-xl border-2 border-gray-500 border-solid rounded-full px-2 py-1">FSP</div>

      <!-- Mobile menu button -->
      <button
        id="menu-toggle"
        class="block md:hidden p-2 text-black hover:text-gray-500 focus:outline-none"
        aria-label="Toggle menu"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
      <!-- Desktop navigation -->
      <div class="hidden md:block">
        <div class="flex items-center space-x-4">
          {
            linkItems.map((item) => (
              <NavLink href={item.href} class={linkClassFull}>
                {item.label}
              </NavLink>
            ))
          }
        </div>
      </div>
    </div>

    <!-- Mobile navigation -->
    <div id="mobile-menu" class="hidden md:hidden mt-2 space-y-1">
      {
        linkItems.map((item) => (
          <NavLink href={item.href} class={linkClassCompact}>
            {item.label}
          </NavLink>
        ))
      }
    </div>
  </nav>
</header>

<script>
  const menuToggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  const header = document.querySelector('header');

  if (menuToggle && mobileMenu) {
    menuToggle.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });

    // Close menu when clicking a link
    mobileMenu.querySelectorAll('a').forEach((link) => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('hidden');
      });
    });

    // Close menu when clicking outside
    document.addEventListener('click', (event) => {
      const isClickInsideHeader = header?.contains(event.target as Node);
      if (!isClickInsideHeader) {
        mobileMenu.classList.add('hidden');
      }
    });

    // Handle escape key
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape') {
        mobileMenu.classList.add('hidden');
      }
    });
  }
</script>
